{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/algorithm-right-skill-trees","result":{"data":{"markdownRemark":{"id":"cd0aee8e-a52d-5039-83ff-f3ce45b666d4","html":"<h2 id=\"문제\"><a href=\"#%EB%AC%B8%EC%A0%9C\" aria-label=\"문제 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>문제</h2>\n<p>함수의 인자로 <code class=\"language-text\">skill</code>과 <code class=\"language-text\">skill_trees</code>를 받고, skill은 선행되어야 할 skill들의 순서이며, skill<em>trees는 유저가 찍으려는 skill 순서도를 나타낸 결과물의 배열이라고 생각하면 될 것같다.\n예를 들어, <code class=\"language-text\">skill = &#39;CBD&#39;</code> 라면 C -> B -> D 순서로 스킬이 반드시 찍혀야되며, `skill</em>trees = [“BACDE”, “CBADF”, “AECB”, “BDA”]`에서 올바른 스킬트리는 2개이다. 다른 스킬들은 어떻게 찍히던 상관 없다.</p>\n<h2 id=\"제한조건\"><a href=\"#%EC%A0%9C%ED%95%9C%EC%A1%B0%EA%B1%B4\" aria-label=\"제한조건 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>제한조건</h2>\n<ul>\n<li>스킬은 알파벳 대문자로 표기하며, 모든 문자열은 알파벳 대문자로만 이루어져 있습니다.</li>\n<li>\n<p>스킬 순서와 스킬트리는 문자열로 표기합니다.</p>\n<ul>\n<li>예를 들어, C → B → D 라면 CBD로 표기합니다</li>\n</ul>\n</li>\n<li>선행 스킬 순서 skill의 길이는 1 이상 26 이하이며, 스킬은 중복해 주어지지 않습니다.</li>\n<li>skill_trees는 길이 1 이상 20 이하인 배열입니다.</li>\n<li>\n<p>skill_trees의 원소는 스킬을 나타내는 문자열입니다.</p>\n<ul>\n<li>skill_trees의 원소는 길이가 2 이상 26 이하인 문자열이며, 스킬이 중복해 주어지지 않습니다.</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"생각한-풀이-방법\"><a href=\"#%EC%83%9D%EA%B0%81%ED%95%9C-%ED%92%80%EC%9D%B4-%EB%B0%A9%EB%B2%95\" aria-label=\"생각한 풀이 방법 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>생각한 풀이 방법</h2>\n<p>객체에 skill 프로퍼티를 생성하고 반복문으로 skill tree들과 비교도 해보며 여러가지 시행착오를 겪었지만, 동료와 함께 풀면서 stack이나 queue를 사용하는 것이 어떤지 고민했고, queue를 사용해 하나씩 뽑아서 만약 skill tree에 있다면 그 선행 skill과 맞는지 비교하는 방법으로 풀었다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">function solution(skill, skill_trees) {\n    let answer = 0;\n\n    skill_trees.forEach(skillTree =&gt; {\n        const skillStack = [...skill];\n\n        const isRightTree = [...skillTree].every((skillUnit) =&gt; {\n            if(skillStack.indexOf(skillUnit) &gt; -1) {\n                const nextSkill = skillStack.shift();\n                return nextSkill === skillUnit;\n            }\n            return true;\n        });\n\n        if(isRightTree) answer++;\n    });\n\n    return answer;\n}</code></pre></div>\n<hr>\n<blockquote>\n<p>공부한 내용을 정리하는 공간으로 학습 중 습득한 내용이 정확하지 않은 정보를 포함할 수 있어 추후 발견시 수정하도록 하겠습니다.</p>\n</blockquote>\n<hr>","fields":{"slug":"/posts/algorithm-right-skill-trees","tagSlugs":["/tag/programmers/","/tag/algorithm/","/tag/javascript/"]},"frontmatter":{"date":"2019-11-19T14:11:11.000Z","description":"프로그래머스 알고리즘 문제를 풀고 이를 정리하였다. 주제는 스킬 트리로, 쉽게 게임에서 선행 스킬을 배워야만 다음 스킬을 배울 수 있는 알고리즘으로 제공되는 여러가지 Skill Tree가 제시된 Skill 순서에 맞는지 확인하는 알고리즘이다. 해당 문제는 프로그래머스에서 제공하는 문제다.","tags":["Programmers","Algorithm","Javascript"],"title":"올바른 스킬 알고리즘 풀이","socialImage":null}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/posts/algorithm-right-skill-trees"}}}